/*
 * Copyright (C) 2021 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
}

android {
    compileSdk 31
    buildToolsVersion build_tools_version
    defaultConfig {
        applicationId 'com.nims.android.fruitful'
        minSdk 28
        targetSdk 31
        versionCode 1
        versionName '1.0.0-alpha02'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [usesCleartextTraffic:"false"]
        }
        debug {
            manifestPlaceholders = [usesCleartextTraffic:"true"]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    testOptions {
        unitTests.all {
            systemProperty 'robolectric.enabledSdks', '28'
        }
        unitTests {
            includeAndroidResources = true
        }
    }
    packagingOptions {
        excludes += '/META-INF/AL2.0'
        excludes += '/META-INF/LGPL2.1'
    }
}

dependencies {
    implementation "com.google.firebase:firebase-auth-ktx:$firebase_version"
    implementation 'com.google.android.gms:play-services-auth:20.1.0'
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$desugar_jdk_version"
    implementation 'com.firebaseui:firebase-ui-auth:8.0.0'

    implementation "androidx.core:core-ktx:$core_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.activity:activity-compose:$activity_compose_version"
    implementation "androidx.navigation:navigation-compose:$nav_compose_version"
    implementation "com.google.accompanist:accompanist-insets-ui:$accompanist_version"
    implementation "com.google.accompanist:accompanist-flowlayout:$accompanist_version"

    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0-rc01'
    kapt "androidx.hilt:hilt-compiler:$hilt_compiler_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    kapt "androidx.room:room-compiler:$room_version"
    api "androidx.room:room-ktx:$room_version"

    testImplementation "junit:junit:$junit_version"
    testImplementation "com.google.truth:truth:$truth_version"
    testImplementation "androidx.test:core-ktx:$androidx_test_core_version"
    testImplementation "androidx.test:runner:$androidx_test_runner_version"
    testImplementation "androidx.test.ext:junit:$androidx_test_ext_junit_version"
    testImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    testImplementation "androidx.arch.core:core-testing:$core_testing_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"

    // We need this for tests. It should be 'debugImplementation' to put the test manifest in the
    // app package.
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    androidTestImplementation "junit:junit:$junit_version"
    androidTestImplementation "com.google.truth:truth:$truth_version"
    androidTestImplementation "androidx.test:core-ktx:$androidx_test_core_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_runner_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_test_ext_junit_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    testImplementation "androidx.room:room-testing:$room_version"



}

// USE EITHER DEBUG/RELEASE GOOGLE SERVICES VARIANTS
// You will need to create a `debug` and `release` file in root and add the `google-services.json` file
// for src for this to work

//task switchToDebug(type: Copy) {
//    description = 'Switches to DEBUG google-services.json'
//    from "src/debug"
//    include "google-services.json"
//    into "."
//}
//
//task switchToRelease(type: Copy) {
//    description = 'Switches to RELEASE google-services.json'
//    from "src/release"
//    include "google-services.json"
//    into "."
//}
//
//afterEvaluate {
//    processDebugGoogleServices.dependsOn switchToDebug
//    processReleaseGoogleServices.dependsOn switchToRelease
//}
